테이블 구조를 살펴보기 위한 DESC

DESC[RIBE] 테이블명

테이블의 구조(컬럼명, 데이터형, 길이, NULL허용 유무 등) 확인하기 위함

데이터를 조회하기 위한 SELECT 문

★ SQL은 대소문자 구분 안함
SELECT      [DISCTINCT] {*| column[alias].....} ※ 중괄호는 기능을 나타냄
FROM        table
[WHERE      condition]
[GOROUP BY  group by expression]
[HAVING     group condition]
[ORDER BY   column];

SELECT 절: 조회하고자 하는 컬럼명의 리스트를 나열합니다.
DISCTINCT 절: 동일한 내용을 한 번씩만 출력하여 중복을 제거합니다.
FROM 절: 조회하고자 하는 테이블명의 리스트를 나열합니다.
WHERE 절: 조회하고자 하는 로우의 조건을 나열합니다.
GOROUP BY 절: 동일한 값을 갖는 로우들을 한 그룹으로 묶습니다.
HAVING 절: 로우들의 그룹이 만족해야 하는 조건을 제시합니다.
ORDER BY 절: 로우들의 정렬 순서를 제시합니다.

NULL을 0또는 다른 값으로 변환하는 NVL함수를 이용합니다.

DUAR 테이블: 한 행으로 결과를 출력하기 위해 제공되는 테이블

WHERE절을 이용한 조건 검색
SELECT      *[column1,column2,...columnN]
FROM        table name
WHERE       condition;

WHERE절은 테이블에 저장된 데이터 중에서 원하는 데이터만 선택적으로 추출하기 위해서 사용됩니다.

WHERE절 다음에 기술하는 조건문(condition)은 컬럼명, 연산자, 비교 대상이 되는 상수값으로 구성됩니다.

문자와 날짜 타입의 상수 값은 반드시 작은 따옴표(' ')로 묶어서 표현해야 하지만 숫자는 그대로 사용해도 됩니다.
영문자 상수 값은 대소문자를 구별한다는 점에 유의해야 합니다.

연산자          설명
  =            같다
  >            보다 크다
  <            보다 작다
  >=           보다 크거나 같다
  <=           보다 작거나 같다
!=, <> ^=      같지 않다

논리 연산자

연산자          기호            의미
 AND            &,&&         두 가지 조건을 모두 만족해야만 검색할 수 있습니다
 OR             |,||         두 가지 조건 중에서 한가지만 만족하더라도 검색할 수 있습니다.
 NOT            !            조건에 만족하지 못하는 것만 검색합니다.

BETWEEN 연산자를 사용한 조건 검색

column.name BETWEEN A AND B

BETWEEN AND 연산자는 특정 컬럼의 데이터 값이 하한값(A) 와 상한값(B) 사이에 포함되는 로우를 검색하기 위한 연산자입니다.

IN 연산자를 이용한 조건 검색
column.name IN(A,B,C)
IN 연산자는 특정 컬럼의 값이 A,B,C 중에 하나라도 일치하면 참이 되는 연산자입니다.

LIKE 연산자와 와일드카드
column.name LIKE pattern
LIKE 연산자는 컬럼에 저장된 문자 상수 중에서 LIKE 연산자에서 지정한 문자 패턴과 부분적으로 일치하면 참이 되는 연산자로 
이 씨 성을 갖는 사람을 찾거나 거주지가 서울인 사람을 찾는 것과 같이 컬럼에 저장된 데이터의 일부분만 일치하더라도 조회가
가능하도록 하기 위해서 사용합니다.

와일드 카드         |              의미
    %              | 문자가 없거나 하나 이상의 문자가 어떤 값이 와도 상관없습니다.
    _              | 하나의 문자가 어떤 값이 와도 상관없습니다.

IS NULL 연산자는 컬럼 값 중에서 NULL 을 포함하는 로우를 검색하기 위해 사용하는 연산자입니다.  