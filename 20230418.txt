ACID는 트랜잭션을 정의하는 4가지 중대한 속성을 가리키는 약어입니다. 
원자성(Atomicity) 
한 트랜잭션의 연산들이 모두 성공하거나, 반대로 전부 실패되는 성질

일관성(Consistency) 
트랜잭션에 대한 로그가 남아야하는 성질

격리,고립성(Isolation) 
모든 트랜잭션은 다른 트랜잭션으로부터 독립

지속성(Durability)을 의미
트랜잭션에 대한 로그가 남아야하는 성질


캡슐화
비슷한 역할을 하는 속성과 메소드들을 하나의 클래스로 모은것을 캡슐화 라고 한다. 캡슐화에 속한 개념으로 정보 은닉이라는것이 있는데, 캡슐 내부의 로직이나 변수들을 감추고 외부에는 기능(api)만을 제공하는것을 의미한다.

상속
상속이란 클래스를 재사용 하는것이다. 상위 클래스를 하위 클래스에서 상속 받게 되면 상위 클래스의 멤버변수나 메소드를 그대로 물려 받을 수 있다.
상속이 있기 때문에 코드를 재활용할 수 있고 그렇기 때문에 생산성이 높고 유지보수 하기가 좋다. 

추상화
추상화라는것은, 어떤 실체로부터 공통적인 부분이나 관심 있는 특성들만 한곳에 모은것을 의미한다. 예를들어서,
지구를 본따 만든 지구본을 예로 들 수 있다. 지구본은 실제 지구로 부터 관심 있는 특성들(대륙의 위치, 위도,경도)만 뽑아서 만든것이다. 지구를 추상화해서 지구본을 만들었다.
객체지향에서의 추상화는 어떤 하위클래스들에 존재하는 공통적인 메소드를 인터페이스로 정의하는것을 예로 들 수 있다.

다형성
다형성은, 같은 모양의 함수가 상황에 따라 다르게 동작 하는것을 의미한다. 오버로딩과 오버라이딩이 있는데,
오버로딩이란것은 함수의 이름은 같으나 함수의 매개변수 숫자, 타입등을 달리해서 다르게 사용하는것을 의미하고,
오버라이딩은 상위 클래스의 메소드를 하위 클래스에서 똑같은 이름으로 재정의 하는것을 의미한다.(덮어씌우기) 이렇게 되면,
c++의 경우에는 상위 클래스 타입 변수에 하위 클래스를 담은 상태에서 메소드를 호출하면 상위 클래스의 메소드가 호출되고,
하위 클래스 타입 변수에 하위 클래스를 담으면 하위 클래스의 메소드가 호출된다. 즉, 메소드의 이름은 똑같은데,
상황(상위 클래스의 참조 변수냐 하위 클래스의 참조 변수냐)에 따라 호출 되는 메소드가 다른것이다.

트랜잭션 관리
트랜잭션(transaction)은 데이터 처리에서 논리적으로 하나(최소)의 작업 단위를
의미합니다.

서버
데이터를 포함하거나 네트워크의 다른 컴퓨터에서 액세스하는 기능을 제공하는 컴퓨터

클라이언트 
서버로부터 서비스나 데이터를 요청하는 컴퓨터

무결성 제약 조건
데이터 무결성 제약 조건(Data Integrity Constraint Rule)
테이블에 유효하지 않은 데이터가 입력되는 것을 방지하기 위해서 테이블을 생성할 때 각 컬럼에 대해
정의하는 여러가지 규칙을 말합니다.

무결성 제약 조건    역할
NOY NULL           컬럼에 NULL 값을 포함하지 못하도록 지정합니다.
UNIQUE             테이블의 모든 로우에 대해서 유일한 값을 갖도록 합니다.
PRIMARY KEY        테이블의 각 행을 식별하기 위한 것으로 NULL과 중복된 값을 모두 허용하지 않습니다.
                   즉 NOT NULL 조건과 UNIQUE 조건을 결합한 형태입니다.
FOREIGN KEY        참조되는 테이블에 컬럼 값이 항상 존재해야 합니다.
CHECK              저장 가능한 데이터 값의 범위나 조건을 지정하여 설정한 값만을 허용합니다.

CREATE TABLE [schema] table_name
( colume_name   datatype    [DEFAULT experession]   
  [column_constraint], [column_constraint],[...]);

참조 무결성을 위한 FOREIGN KET 제약 조건
외래키 즉, 참조의 무결성은 테이블과 테이블 사이의 주종 관계 설정을 위한 제약조건입니다.

자식 테이블은 다른 테이블의 컬럼 값을 참조하는 테이블입니다.
부모 테이블은 다른 테이블에 의해 참조되는 테이블입니다.

외래키는 부모 테이블의 컬럼 값을 참조하는 자식 테이블의 컬럼입니다.
부모키는 자식 테이블에서 참조하는 부모 테이블의 컬럼입니다.
부모키가 되기 위한 컬럼은 반드시 부모 테이블의 기본키나 유일킬 설정되어
있어야 합니다.

뷰(View)의 개념
뷰(View)는 하나 이상의 테이블이나 다른 뷰를 이용하여 생성되는 가상 테이블을 말합니다.

뷰(View)는 테이블에서 파생된 객체로서 뷰를 정의하기 위해서 사용된 테이블을 기본 테이블이라고 합니다.
뷰를 정의한 기본 테이블의 무결성 제약 조건은 상속됩니다.

CREATE [OR REPLACE][FORCE|NOFORCE] VIEW view name
[(alias, alias...)]
AS SUBQUERY

뷰의종류
단순 뷰(simple view)는 하나의 기본 테이블로 생성된 뷰이며,
DML 명령문을 실행할 수 있습니다.

복합 뷰(complex view)는 두 개 이상의 기본 테이블로 생성한 뷰입니다.
- DISTINCT, 그룹함수, GROUP BY ROWNUM을 포함할 수 없습니다.

OR REPLACE
OR REPLACE 옵션은 이미 존재하는 뷰에 대해서 그 내용을 새롭게 변경하여 재생성합니다.

CREATE OR REPLACE VIEW를 사용하여 융통성 있게 뷰를 생성합니다.

FORCE
FORCE 옵션은 기본 테이블의 존재 유무에 상관없이 뷰를 생성해야 할 경우에
사용하며 NOFORCE 옵션은 기본 테이블이 존재할 경우에만 뷰를 생성합니다.

WITH CHECK OPTION
WITH CHECK OPTION을 사용하면 해당 뷰를 통해서 볼 수 있는 범위 내에서만 
UPDATE 또는 INSERT가 가능합니다.

WITH READ ONLY
WITH READ ONLY를 사용하면 해당 뷰를 통해서만 SELECT만 가능하며 
INSERT/UPDATE/DELETE를 할 수 없게 됩니다.

시퀀스
시퀀스는 테이블 내의 유일한 숫자를 자동으로 생성해준다.
시퀀스는 키본키가 유일한  값을 갖도록 사용자가 직접 값을 생성해 내는 부담감을 줄일 수 있습니다.

CURRVAL, NEXTVAL
시퀀스의 현재값을 알아내기 위해서  CURRVAL를 사용하고,
다음값을 알아내기 위해서는 NEXTVAL를 사용합니다.

시퀀스를 기본키에 접목하기
시퀀스는 새로운 데이터가 추가될 때 기본키 값을 자동으로 발생시키는 용도로 사용됩니다.

조회시 성능 향상을 위한 인덱스

인덱스 검색 속도를 향상시키기 위해서 사용합니다.
인덱스는 사용자의 필요에 의해서 직접 생성할 수도 있지만 데이터 무결성을 확인하기 위해서
수시로 데이터를 검색하는 용도로 사용하는 기본키나 유일키는 인덱스가 자동으로 생성됩니다.

인덱스를 사용해야 하는 경우
테이블의 행의 개수가 많을 때
WHERE 문에 해당 컬럼이 많이 사용될 때
검색 결과 전체 데이터의 2%~4% 정도일 때
JOIN에 자주 사용되는 컬럼이나 NULL을 포함하는 컬럼이 많을 때

인덱스를 사용하지 말아야 하는 경우
테이블의 행의 개수가 적을 때
WHERE 문에 해당 컬럼이 자주 사용되지 않을 때
검색 결과 전체 데이터의 10%~15% 정도일 때
테이블에 DML 작업이 많은 경우 
즉. 입력/수정/삭제 등이 자주 일어날 때

권한

권한은 사용자가 오라클 시스템을 관리하는 시스템 권한과
객체를 사용할 수 있도록 관리하는 객체 권한으로 나뉩니다.
CREATE USER user name       ALTER USER user name
IDENTIFIED BY password;     IDENTIFIED BY password;


권한                설명
CREATE Session      데이터베이스에 연결할 수 있는 권한
CREATE TABLE        테이블을 생성할 수 있는 권한
CREATE SEQUENCE     시퀀스를 생성할 수 있는 권한
CREATE VIEW         뷰를 생성할 수 있는 권한

★권한 부여하기
★GRANT privilege_name, ...
★ON    object_name
★TO    user_name

테이블 스페이스는 디스크 공간을 소비하는 테이블과 뷰,
그리고 그 밖의 다른 데이터베이스 객체들이 저장되는 장소입니다.

★권한 회수하기
★REVOKE privilege_name, ...
★ON    object_name
★TO    user_name;

WITH GRANT OPTION

WITH GRANT OPTION을 사용하여 권한을 부여하게 되면 권한을 부여 받은 사용자도 해당 권한을 다른 사용자에게 부여할 수 있게됩니다.

롤(Role)을 사용한 권한 부여
롤은 여러 사용자가 다양한 권한을 효과적으로 관리할 수 있도록 관련된 권한끼리 묶어 놓은 것입니다.
사전 정의된 롤은 오라클 데이터베이스를 설치하면 기본적으로 제공되는 롤입니다.
사용자가 정의한 롤은 사용자가 직접 정의하여 사용하는 것을 말합니다.

<사전 정의된 롤>
DBA롤은 시스템 자원을 무제한 적으로 사용하며 시스템 관리에 필요한 모든 권한을 부여할 수 있는
강력한 권한을 보유한 롤입니다.
CONNECT롤은 사용자가 데이터베이스에 접속 가능하도록 가장 기본적인 시스템 권한 8가지를 그룹화 한 것입니다.
RESOURCE롤은 사용자가 객체(테이블,뷰,인덱스)를 생성할 수 있도록 하기 위해서 시스템 권한을 그룹화한
것입니다.